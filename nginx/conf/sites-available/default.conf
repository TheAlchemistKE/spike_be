upstream auth_service {
  server auth_service:3000;
}

upstream assets_service {
  server assets_service:3000;
}

upstream routing_service {
  server routing_service:3000;
}

upstream deliveries_service {
  server deliveries_service:3000 max_fails=3 fail_timeout=30s;
}

upstream orders_service {
  server orders_service:3000;
}

upstream analytics_service {
  server analytics_service:3000;
}

upstream aggregator_service {
  server aggregator_service:3000;
}

upstream frontend {
  server frontend:3000;
}

server {
  #   listen        443 ssl;
  listen 80 default_server;

  # server_name   logs.io;

  include /etc/nginx/common/common.conf;
  #   include       /etc/nginx/common/ssl.conf;

  include /etc/nginx/common/common_location.conf;

  #   error_page 401 = @error401;
  #   location @error401 {
  #       return 302 https://login.example.com;
  #   }

  auth_request /api/auth;

  location / {
    proxy_pass http://frontend; # Points to your Next.js frontend service in Docker Compose
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }


  location = /api/auth {
    internal;
    proxy_pass_request_body off;

    proxy_set_header Content-Length "";
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Original-METHOD $request_method;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    set $query '';
    if ($request_uri ~* "[^\?]+\?(.*)$") {
      set $query $1;
    }

    proxy_pass http://auth_service/auth/v1/key?$query;

  }

  location /api/assets {
    proxy_pass http://assets_service;
    #       include     /etc/nginx/common/common_location.conf;
  }

  location /api/deliveries {
    proxy_pass http://deliveries_service;
    #       include     /etc/nginx/common/common_location.conf;
  }

  location /api/orders {
    proxy_pass http://orders_service;
    #       include     /etc/nginx/common/common_location.conf;
  }

   location /api/aggregator {
      proxy_pass http://aggregator_service;
      #       include     /etc/nginx/common/common_location.conf;
    }

  location /api/analytics {
    proxy_pass http://orders_service;
    #       include     /etc/nginx/common/common_location.conf;
  }


}
